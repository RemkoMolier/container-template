name: Build

on:
  workflow_call:
    inputs:
      publish:
        type: boolean
        description: Whether to publish the image to Github Registry
        required: false
        default: false
    outputs:
      name:
        description: Base name of image
        value: ${{ jobs.build.outputs.name }}
      release:
        description: The release for this build
        value: ${{ jobs.build.outputs.release }}
      version:
        description: Main version tag generated by this image build
        value: ${{ jobs.build.outputs.version }}
      tags:
        description: The tags generated by this image build
        value: ${{ jobs.build.outputs.tags }}
      labels:
        description: The labels generated by this image build
        value: ${{ jobs.build.outputs.labels }}

permissions:
  contents: write
  packages: write
  security-events: write

jobs:
  build:
    name: Build Docker Image
    permissions:
      contents: write
      security-events: write
      packages: write
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    outputs:
      name: ${{ env.NAME }}
      release: ${{ env.RELEASE }}
      version: ${{ steps.meta.outputs.version }}
      tags: ${{ steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}
    steps:
      - uses: actions/checkout@v4
      - uses: falti/dotenv-action@v1.0.4
        with:
          keys-case: bypass
          export-variables: true
      - if: github.ref_type == 'tag'
        run: |
          echo "RELEASE=${{ github.ref_name }}" >> "$GITHUB_ENV"
      - run: |
          echo "IMAGE_NAME=ghcr.io/$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')/${NAME}" >> "$GITHUB_ENV"
      - id: meta
        uses: docker/metadata-action@v4
        with:
          context: workflow
          images: |
            name=localhost:5000/localbuild/${{ env.NAME }}
            name=${{ env.IMAGE_NAME }},enable=${{ inputs.publish }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/0.') }}
            type=ref,event=branch,suffix=-{{ sha }},enable=${{ github.event_name != 'pull_request' && startsWith(github.ref, 'refs/heads') && github.ref != 'refs/heads/main' }}
            type=ref,event=pr
            type=ref,event=tag
            type=schedule
            type=raw,value=latest,enable=${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/main' }}
          flavor: |
            latest=false
      - uses: docker/setup-qemu-action@v2
      - id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: network=host
      - uses: docker/login-action@v2
        if: inputs.publish
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64, linux/arm64/v8, linux/arm/v7
          build-args: |
            RELEASE=${{ env.RELEASE }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          sbom: true
          provenance: false
      - id: grype
        uses: anchore/scan-action@v3
        with:
          image: "localhost:5000/localbuild/${{ env.NAME }}:${{ steps.meta.outputs.version }}"
          fail-build: false
          severity-cutoff: critical
      - uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ steps.grype.outputs.sarif }}
          category: grype
      - uses: aquasecurity/trivy-action@master
        with:
          image-ref: "localhost:5000/localbuild/${{ env.NAME }}:${{ steps.meta.outputs.version }}"
          format: "sarif"
          output: "trivy-results.sarif"
      - uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: "trivy-results.sarif"
          category: trivy
      - uses: anchore/sbom-action@v0.14.2
        with:
          image: "localhost:5000/localbuild/${{ env.NAME }}:${{ steps.meta.outputs.version }}"
          artifact-name: ${{ env.NAME }}.pdx
          dependency-snapshot: true
